Function Get-VBRMalwareDetectionLogs
{
    <#
    .SYNOPSIS
        Parses the events from Veeam's malware detection logs into PowerShell objects.

    .PARAMETER Path
        The path to one or more Veeam log files.

    .EXAMPLE
        Get-VBRMalwareDetectionLogs

    .EXAMPLE
        Get-VBRMalwareDetectionLogs -Path C:\ProgramData\Veeam\Backup\Malware_detection_logs\*

    .EXAMPLE
        Get-VBRMalwareDetectionLogs -Path C:\ProgramData\Veeam\Backup\Malware_detection_logs\suspicious_files_24-01-29.txt

    .NOTES
        Raymond Jette
        1/29/2024
    #>
    [CmdletBinding()]
    Param(
        [ValidateNotNullOrEmpty()]
        [string[]] $Path = 'C:\ProgramData\Veeam\Backup\Malware_detection_logs\*'
    )
    try {
        Get-ChildItem -Path $Path -ErrorAction 'Stop' | Where-Object {$_.Name -match "^suspicious_files_.*\.log$"} | Get-Content |
            ForEach-Object {
                if ($_ -match '^\[\d{2}\.\d{2}\.\d{4}') {
                    $split = $_ -split '\s+'
                    $colonSplit = $split[5] -split ':'

                    # extract the date and time values and store them as a datatime object.
                    $dateTime = ($split[0] -replace '\[', '') + ' ' +
                                ($split[1] -replace '\]', '')
                    $dateTime = [datetime]::parseexact($dateTime, 'dd.MM.yyyy HH:mm:ss.fff', $null)

                    $hostName = $colonSplit[0]
                    $fileMatch = [regex]::matches($_, ':(\w:.*)\.([^.]+$)')
                    [PSCustomObject]@{
                        DateTime  = $dateTime
                        Level     = $split[3]
                        Hostname  = $hostName
                        FileName = $fileMatch.groups.value[1] + '.' + $fileMatch.groups.value[2]
                        Extension = $fileMatch.groups.value[2]
                    }

                    $fileName
                }
        }  
    }
    catch {
        Write-Error -Message $_.Exception.Message
    }
}